const AuthErrorCodes = {
  claimsTooLarge: 'auth/claims-too-large',
  emailAlreadyExists: 'auth/email-already-exists',
  idTokenExpired: 'auth/id-token-expired',
  idTokenRevoked: 'auth/id-token-revoked',
  insufficientPermission: 'auth/insufficient-permission',
  internalError: 'auth/internal-error',
  invalidArgument: 'auth/invalid-argument',
  invalidClaims: 'auth/invalid-claims',
  invalidContinueURI: 'auth/invalid-continue-uri',
  invalidCreationTime: 'auth/invalid-creation-time',
  invalidCredential: 'auth/invalid-credential',
  invalidDisabledField: 'auth/invalid-disabled-field',
  invalidDisplayName: 'auth/invalid-display-name',
  invalidDynamicLinkDomain: 'auth/invalid-dynamic-link-domain',
  invalidEmail: 'auth/invalid-email',
  invalidEmailVerified: 'auth/invalid-email-verified',
  invalidHashAlgorithm: 'auth/invalid-hash-algorithm',
  invalidHashBlockSize: 'auth/invalid-hash-block-size',
  invalidHashDerivedKeyLength: 'auth/invalid-hash-derived-key-length',
  invalidHashKey: 'auth/invalid-hash-key',
  invalidHashMemoryCost: 'auth/invalid-hash-memory-cost',
  invalidHashParallelization: 'auth/invalid-hash-parallelization',
  invalidHashRounds: 'auth/invalid-hash-rounds',
  invalidHashSaltSeparator: 'auth/invalid-hash-salt-separator',
  invalidIdToken: 'auth/invalid-id-token',
  invalidLastSignInTime: 'auth/invalid-last-sign-in-time',
  invalidPageToken: 'auth/invalid-page-token',
  invalidPassword: 'auth/invalid-password',
  invalidPasswordHash: 'auth/invalid-password-hash',
  invalidPasswordSalt: 'auth/invalid-password-salt',
  invalidPhoneNumber: 'auth/invalid-phone-number',
  invalidPhotoUrl: 'auth/invalid-photo-url',
  invalidProviderData: 'auth/invalid-provider-data',
  invalidProviderId: 'auth/invalid-provider-id',
  invalidSessionCookieDuration: 'auth/invalid-session-cookie-duration',
  invalidUID: 'auth/invalid-uid',
  invalidUserImport: 'auth/invalid-user-import',
  maximumUserCountExceeded: 'auth/maximum-user-count-exceeded',
  missingAndroidPkgName: 'auth/missing-android-pkg-name',
  missingContinueURI: 'auth/missing-continue-uri',
  missingHashAlgorithm: 'auth/missing-hash-algorithm',
  missingIOSBundleId: 'auth/missing-ios-bundle-id',
  missingPassword: 'auth/missing-password',
  missingUID: 'auth/missing-uid',
  phoneNumberAlreadyExists: 'auth/phone-number-already-exists',
  projectNotFound: 'auth/project-not-found',
  reservedClaims: 'auth/reserved-claims',
  sessionCookieExpired: 'auth/session-cookie-expired',
  sessionCookieRevoked: 'auth/session-cookie-revoked',
  uidAlreadyExists: 'auth/uid-already-exists',
  unauthorizedContinueURI: 'auth/unauthorized-continue-uri',
  userNotFound: 'auth/user-not-found',
  appDeleted: 'auth/app-deleted',
  appNotAuthorized: 'auth/app-not-authorized',
  argumentError: 'auth/argument-error',
  invalidApiKey: 'auth/invalid-api-key',
  invalidUserToken: 'auth/invalid-user-token',
  invalidTenantId: 'auth/invalid-tenant-id',
  networkRequestFailed: 'auth/network-request-failed',
  operationNotAllowed: 'auth/operation-not-allowed',
  requiresRecentLogin: 'auth/requires-recent-login',
  tooManyRequests: 'auth/too-many-requests',
  unauthorizedDomain: 'auth/unauthorized-domain',
  userDisabled: 'auth/user-disabled',
  userTokenExpired: 'auth/user-token-expired',
  webStorageUnsupported: 'auth/web-storage-unsupported',
  wrongPassword: 'auth/wrong-password',
};

const _AuthErrorMessages =
{
  [AuthErrorCodes.invalidCredential]: 'Neispravna email adresa ili lozinka.',
  [AuthErrorCodes.invalidEmail]: 'Neispravno unesena email adresa.',
  [AuthErrorCodes.missingPassword]: 'Neispravno unesena lozinka.',
  [AuthErrorCodes.wrongPassword]: 'Neispravna email adresa ili lozinka.',
  [AuthErrorCodes.userNotFound]: 'Neispravna email adresa ili lozinka.',
};

const authErrorHandler = {
  get: (target: { [x: string]: string}, name: string) => {
    return target.hasOwnProperty(name) ? target[name] : 'Internal server error.';
  }
}

const AuthErrorMessages = new Proxy<typeof _AuthErrorMessages>(_AuthErrorMessages, authErrorHandler)

export { AuthErrorMessages };
